class Set<of T>

	test
		si = Set<of int>()
		assert si.count == 0
		
	var _data as Dictionary<of T, bool>
	
	def init
		_data = Dictionary<of T, bool>()
		
	def init(capacity as int)
		_data = Dictionary<of T, bool>(capacity)
	
	def init(items as IEnumerable<of T>)
		_data = Dictionary<of T, bool>()
		for item in items
			_data.add(item, true)
	
	get count as int
		return _data.count
	
	def add(item as T)
		_data[item] = true
