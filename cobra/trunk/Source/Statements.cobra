class Stmt
	inherits SyntaxNode

	def construct(token as IToken)
		base.construct(token)

	def afterParserRecognizesStatement
		pass


class AssertStmt
	inherits Stmt

	var _expr as Expr
	var _info as Expr?

	def construct(token as IToken, expr as Expr, info as Expr?)
		base.construct(token)
		_expr = TruthExpr(expr)
		_info = info

	def _bindImp is override
		base._bindImp()
		_expr.bindImp()
		if _info
			_info.bindImp()

#	def genCS(out):
#		Stmt.genCS(out)
#		out.write('if (!')
#		.expr.genCS(out)
#		out.write(') ')
#		out.indent()
#		s = .expr.toCobraSource()
#		s = .csStringLitFor(s)
#		out.write('throw new AssertException(%s, %s, %s, ' % (.csStringLitFor(.fileName), .lineNumber, s))
#		if .info:
#			.info.genCS(out)
#		else:
#			out.write('null')
#		out.write(');\n')
#		out.dedent()


class ReturnStmt
	inherits Stmt

	def construct(token as IToken, expr as Expr?)
		base.construct(token)
		pass
