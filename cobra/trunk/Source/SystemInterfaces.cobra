namespace System

	class Object
		is fake
		def init
			pass
		def equals(obj as Object?) as bool
			pass
		def getHashCode as int
			pass
		def getType as Type
			pass
		def toString as String
			pass
		def toString(fmt as String) as String  # technically untrue, but comes in handy for primitive types at this point
			pass
		def memberwiseClone as Object is protected
			pass
		shared
			# TODO:
			#def equals(a as Object, b as Object) as bool is shared
			#	pass
			def referenceEquals(a as Object, b as Object) as bool is shared
				pass

	class String
		is fake
		inherits Object
		shared
			def join(sep as String, values as passthrough) as String
				pass
		def contains(s as String) as bool
			pass
		def endsWith(s as String) as bool
			pass
		def indexOf(s as String) as int
			pass
		def indexOf(s as String, index as int) as int
			pass
		get length as int
			pass
		get [i as int] as char
			pass
		def padLeft(width as int) as String
			pass
		def padLeft(width as int, c as char) as String
			pass
		def padRight(width as int) as String
			pass
		def padRight(width as int, c as char) as String
			pass
		def replace(oldValue as String, newValue as String) as String
			pass
		def split(chars as vari char) as System.Collections.Generic.List<of String>
			pass
		def startsWith(s as String) as bool
			pass
		def substring(start as int) as String
			pass
		def substring(start as int, length as int) as String
			pass
		def toLower as String
			pass
		def toUpper as String
			pass
		def trim as String
			pass
		def trim(chars as vari char)  # should be array(char) or char[]
			pass
		def trimEnd(chars as vari char)
			pass

	class Type
		is fake
		get name as String
			pass
		def getMethod(name as String) as System.Reflection.MethodInfo
			pass
		def getMethod(name as String, args as passthrough) as System.Reflection.MethodInfo
			pass
		def getProperty(name as String) as System.Reflection.PropertyInfo
			pass

	class Environment
		is fake
		inherits Object
		shared
			def exit(exitCode as int)
				pass
			get newLine as String
				pass
			get currentDirectory as String
				pass
			def getCommandLineArgs as passthrough  # CC: should be array type
				pass
			def getEnvironmentVariable(name as String) as String
				pass

	class Version
		is fake
		inherits Object
		pass

	class Console
		is fake
		inherits Object
		shared
			get out as System.IO.TextWriter
				pass
			def readLine as String
				pass
			def writeLine(s as String)
				pass
			def writeLine(format as String, args as vari Object)
				pass

	class Exception
		is fake
		inherits Object
		def init
			pass
		def init(message as String)
			pass
		get innerException as Exception
			pass
		get message as String
			pass

	class SystemException
		is fake
		inherits Exception
		def init
			pass
		def init(msg as String)
			pass

	class ArgumentNullException
		is fake
		inherits Exception
		pass

	class NullReferenceException
		is fake
		inherits SystemException
		pass

	class FormatException
		is fake
		inherits SystemException
		pass

	class OverflowException
		is fake
		inherits SystemException
		pass

	struct DateTime
		is fake
		get now as DateTime is shared
			pass
		get year as int
			pass
		get month as int
			pass
		get day as int
			pass
		get hour as int
			pass
		get minute as int
			pass
		get second as int
			pass
		def subtract(other as DateTime) as TimeSpan
			pass

	struct TimeSpan
		is fake
		get totalSeconds as float
			pass

	struct Color
		is fake
		pass

	class Math
		is fake
		def round(x as float) as float
			pass

	class Random
		is fake
		def next as int
			pass
		def next(maxx as int) as int
			pass

	interface ICloneable
		is fake
		def clone as Object

	interface IComparable
		is fake
		def compareTo(obj as Object) as int

	interface IDisposable
		is fake
		def dispose

	namespace Collections

		interface IEnumerator
			is fake
			get current as Object
			def moveNext
			def reset

		interface IEnumerable
			is fake
			def getEnumerator as IEnumerator

		interface IList
			is fake
			inherits IEnumerable
			def add(obj as Object)
			def clear
			def contains(obj as Object)
			get count as int
			def indexOf(obj as Object) as int
			def insert(index as int, obj as Object)
			def remove(obj as Object)
			def removeAt(index as int)

		class ArrayList
			is fake
			implements IList, IEnumerable, ICloneable
			def add(obj as Object)
				pass

		namespace Generic

			interface IEnumerator<of T>
				is fake
				inherits IDisposable, System.Collections.IEnumerator
				get current as T

			interface IEnumerable<of T>
				is fake
				inherits System.Collections.IEnumerable
				def getEnumerator as IEnumerator<of T>

			interface ICollection<of T>
				is fake
				inherits IEnumerable<of T>, System.Collections.IEnumerable
				get count as int
				get isReadOnly as bool
				def add(item as T)
				def clear
				def contains(item as T) as bool
				#def copyTo(arr as T[], arrayIndex as int)
				def remove(item as T) as bool

			interface IList<of T>
				is fake
				inherits ICollection<of T>, IEnumerable<of T>, System.Collections.IList, System.Collections.IEnumerable
				get count as int

			class List<of T>
				is fake
				implements IList<of T>, ICollection<of T>, IEnumerable<of T>, System.Collections.IEnumerable
				def add(obj as T)
					pass
				def addRange(stuff as passthrough)
					pass
				def contains(item as T) as bool
					pass
				get count as int
					pass
				def getEnumerator as IEnumerator<of T>
					pass
				def getRange(start as int, count as int) as List<of T>
					pass
				def indexOf(item as T) as int
					pass
				def indexOf(item as T, index as int) as int
					pass
				def indexOf(item as T, index as int, count as int) as int
					pass
				def insert(index as int, item as T)
					pass
				def remove(item as T) as bool
					pass
				def removeAt(index as int)
					pass
				def reverse
					pass
				def sort
					pass
				def toArray as List<of T>
					pass

			class Stack<of T>
				is fake
				get count as int
					pass
				def peek as T
					pass
				def pop as T
					pass
				def push(obj as T)
					pass

			class Queue<of T>
				is fake
				get count as int
					pass
				def enqueue(obj as T?)
					pass
				def dequeue as T
					pass

			interface IDictionary<of TKey, TValue>
				is fake
				inherits System.Collections.IEnumerable
				# TODO:  ICollection<KeyValuePair<TKey,TValue>>, IEnumerable<KeyValuePair<TKey,TValue>>,
				get count as int
				pro [key as TKey] as TValue
				get keys as passthrough  # CC: ICollection<of TKey>
				get values as passthrough  # CC: ICollection<of TValue>

				def add(key as TKey, value as TValue)
				def containsKey(key as TKey) as bool
				def remove(key as TKey) as bool
				# def tryGetValue(key as TKey, value as out TValue) as bool

			class Dictionary<of TKey, TValue>
				is fake
				implements IDictionary<of TKey, TValue>
				def clear
					pass
				get count as int
					pass
				pro [key as TKey] as TValue
					get
						pass
					set
						pass
				get keys as passthrough # CC: ICollection<of TKey>
					pass
				get values as passthrough # CC: ICollection<of TValue>
					pass
				def add(key as TKey, value as TValue)
					pass
				def containsKey(key as TKey) as bool
					pass
				def remove(key as TKey) as bool
					pass
				# def tryGetValue(key as TKey, value as out TValue) as bool

	namespace IO

		class IOException
			is fake
			inherits SystemException
			pass

		class TextReader
			is fake
			def close
				pass
			def readLine as String
				pass
			def readToEnd as String
				pass

		class Stream
			is fake
			pass

		class MemoryStream
			is fake
			pass

		class StreamReader
			is fake
			inherits TextReader
			def readLine as String
				pass

		class TextWriter
			is fake
			implements IDisposable
			get encoding as System.Text.Encoding
				pass
			def flush
				pass
			pro newLine as String
				get
					pass
				set
					pass
			def writeLine(s as String)
				pass
			def writeLine(format as String, args as vari Object)
				pass
			def write(s as String)
				pass
			def write(c as char)
				pass

		class StreamWriter
			is fake
			inherits TextWriter

		class StringWriter
			is fake
			inherits TextWriter
			pass

		class File
			is fake
			shared
				def delete(path as String)
					pass
				def exists(path as String) as bool
					pass
				def openText(path as String) as StreamReader
					pass
				def createText(path as String) as StreamWriter
					pass
				def readAllLines(path as String) as passthrough
					pass
				def readAllText(path as String) as String
					pass
				def writeAllText(fileName as String, contents as String)
					pass

		class Path
			is fake
			shared
				def combine(a as String, b as String) as String
					pass
				get altDirectorySeparatorChar as char
					pass
				get directorySeparatorChar as char
					pass
				get pathSeparator as String
					pass
				def getDirectoryName(path as String) as String
					pass
				def getFileName(path as String) as String
					pass
				def getFileNameWithoutExtension(path as String) as String
					pass

		class Directory
			is fake
			shared
				def exists(path as String) as bool
					pass
				def getCurrentDirectory as String
					pass
				def setCurrentDirectory(path as String)
					pass
				def getFiles(path as String) as passthrough
					pass
				def getDirectories(path as String) as passthrough
					pass

		class FileSystemInfo
			is fake
			pass

		class FileInfo
			is fake
			inherits FileSystemInfo
			get fullName as String
				pass

		class DirectoryInfo
			is fake
			inherits FileSystemInfo
			get name as String
				pass
			get fullName as String
				pass
			def getDirectories as passthrough
				pass
			def getDirectories(path as String) as passthrough
				pass
			def getFiles as passthrough
				pass
			def getFiles(path as String) as passthrough
				pass


	namespace Text

		class StringBuilder
			is fake
			def append(c as char)
				pass
			def append(s as String)
				pass

		class Encoding
			is fake #, abstract
			implements ICloneable
			pass

		namespace RegularExpressions

			class Regex
				is fake
				def match(s as String) as Match
					pass
				def match(s as String, startIndex as int) as Match
					pass

			class Match
				is fake
				get index as int
					return 0

	namespace Net

		class WebClient
			is fake
			def downloadFile(address as String, fileName as String)
				pass

	namespace Web

		class HttpUtility
			is fake

			def htmlEncode(s as String) as String
				pass
			def htmlDecode(s as String) as String
				pass
			def urlEncode(s as String) as String
				pass
			def urlDecode(s as String) as String
				pass

	namespace Reflection

		class TargetInvocationException
			is fake
			inherits SystemException
			pass

		class MemberInfo
			is fake
			pass

		class MethodBase
			is fake
			def invoke(obj as Object, args as Object?) as Object
				pass

		class MethodInfo
			is fake
			inherits MethodBase
			pass

		class PropertyInfo
			is fake
			inherits MemberInfo
			def getValue(obj as Object, args as passthrough) as Object
				pass

	class TargetInvocationException
		is fake
		inherits SystemException
		pass


namespace Cobra

	namespace Lang

		use System.Collections.Generic

		interface ICallable
			is fake
			pass

		interface ICount
			is fake
			get count as int

		class AssertException
			is fake
			inherits Exception
			get info as Object
				pass

		class ExpectException
			is fake
			inherits Exception
			get expectedExceptionType as Type
				pass
			get actualException as Exception
				pass

		class FallThroughException
			is fake
			inherits Exception
			get info as Object
				pass

		class RequireException
			is fake
			inherits AssertException

		class EnsureException
			is fake
			inherits AssertException

		class CobraCore
			is fake
			shared
				get commandLineArgs as List<of String>
					pass

				get releaseNum as int
					pass

				get version as Version
					pass

				get hasSuperStackTrace as bool
					return true

				def dumpStack
					pass

				def toTechString(obj as Object?) as String
					pass
