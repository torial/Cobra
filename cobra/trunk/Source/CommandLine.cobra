"""
Cobra Command Line Program (compiler and more)

"""


class CobraCommandLine

	var _startTime as DateTime

	def construct
		_startTime = DateTime.now

	get versionString as String
		return '0.1.1'

	get verbosity as int
		return 0

	## Self Services

	def error(msg as String)
		if msg
			print 'cobra: error: [msg]'
			print 'Run Cobra without options to get full usage information.'
		Environment.exit(1)

	def main is shared
		CobraCommandLine().run()

	def run
		.handle_testify()

	def handle_compile(paths as List<of String>) as Compiler
		# paths = paths or self.fileList  # TODO
		c = Compiler(.verbosity)
		c.whenError = ProblemAction.Exit  # CC: use extended syntax
		# c.options = _optionDict    # CC: use extended syntax  # TODO
		c.parseFilesNamed(filenames=paths)
		c.bindInt()
		c.bindImp()
		c.genCS()
		c.compileCS()
		return c

	def handle_testify
		"""
		Used internally for testing cobra during development.
		Why not just 'test'? because that is reserved for regular developers to run true unit tests.
		"""
		# TODO Console.error = Console.out
		# TODO: respect command line args: paths = _fileList
		paths = [r"C:\All\echuck\Projects\Cobra\Cobra\Tests"]
		for pathName in paths
			if Directory.exists(pathName)
				.testifyDir(pathName)
			else if File.exists(pathName)
				.testifyFile(pathName)
			else
				.error('No such directory or file named "[pathName]".')
		.testifyFinish()

	def testifyFinish
		count = 100 # TODO
		duration = DateTime.now.subtract(_startTime)
		print
		print '[count] Tests Passed in [duration].'
		print
		print 'Success.'

	def testifyDir(dirName as String) as int
		"""
		Returns the number tests that passed.
		"""
		print 'Running tests in [dirName]'
		count = 0
#		saveDir = os.getcwd()
#		os.chdir(dirname)
#		try:
#			for basename in sorted(os.listdir('.')):
#				pathname = os.path.join(dirname, basename)
#				if basename.endswith('.cobra'):
#					self.testFile(basename)
#					count += 1
#				elif os.path.isdir(basename):
#					count += self.testDir(basename)
#		finally:
#			os.chdir(saveDir)
		return count

	def testifyFile(baseName as String) as int
		return 1

