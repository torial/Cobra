

enum ProblemAction
	Exit
	Throw


class Compiler

	var _verbosity as int
	var _whenError as ProblemAction
	var _options as Dictionary<of String, Object>
	var _modules as List<of Module>

	def construct(verbosity as int)
		.construct(verbosity, ProblemAction.Exit)

	def construct(verbosity as int, whenError as ProblemAction)
		_verbosity = verbosity
		_modules = List<of Module>()
		_whenError = whenError

	get modules from var

	pro whenError from var

	pro options from var

	def parseFilesNamed(filenames as List<of String>)
		pass

	def bindInt
		pass

	def bindImp
		pass

	def genCS
		pass

	def compileCS
		pass
